<UserControl x:Class="Rukn.Views.TextInfoView" x:Name="uc"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rukn.Views"
             xmlns:rukn="clr-namespace:Rukn"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="{DynamicResource Control.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinWidth" Value="230"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="UserControl">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="5">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsReference}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsReference}" Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=InfoSource.Reference.Mode}" Value="Isolated"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="local:TextInfoView.IsChecked" Value="True"/>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True">
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="Padding" Value="7"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <Grid DataContext="{Binding InfoSource, ElementName=uc}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition MinWidth="32" MaxWidth="32"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ContentPresenter x:Name="presenter"
                          Content="{Binding Header, ElementName=uc}"
                              HorizontalAlignment="{Binding HorizontalContentAlignment, ElementName=uc}"
                              VerticalAlignment="{Binding VerticalContentAlignment, ElementName=uc}">
            <ContentPresenter.Style>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:TextInfoView}, Path=IsChecked}" Value="True">
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush.Accent}"/>
                            <Setter Property="TextBlock.FontWeight" Value="DemiBold"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Style>
        </ContentPresenter>
        <Rectangle x:Name="rect"
                       Width="24"
                       Height="24"
                       RadiusX="5"
                       RadiusY="5"
                       Fill="White"
                       Stroke="{DynamicResource Control.BorderBrush}"
                       StrokeThickness="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Grid.Column="1">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:TextInfoView}, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <Path x:Name="checkmark"
                  Data="{StaticResource zi_checkmark-outline}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Grid.Column="1"
                  d:Visibility="Visible"
                  FlowDirection="LeftToRight">
            <Path.Style>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{DynamicResource Brush.Accent}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:TextInfoView}, Path=IsReference}" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource Brush.Accent.Light}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:TextInfoView}, Path=IsChecked}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
        <Grid x:Name="grid" Margin="0,8,0,0" Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding ElementName=uc, Path=IsChecked, Converter={StaticResource BooleanToVisiblilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Path Data="{StaticResource zi_text-box}" Fill="{DynamicResource Brush.Accent.Light}" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,16,0"/>
            <TextBlock Text="{Binding Width}" HorizontalAlignment="Center" Grid.Column="1"/>
            <Path Data="M0,0 L8,8z M0,8 L8,0z" Width="8" Height="8" Stroke="{DynamicResource Text.Disabled}" StrokeThickness="1" Margin="4,0" Grid.Column="2"/>
            <TextBlock Text="{Binding Height}" HorizontalAlignment="Center" Grid.Column="3"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1">
                <TextBlock x:Name="PART_xLabel" Text="{x:Static rukn:Resources.x}" Foreground="{DynamicResource Text.Disabled}"/>
                <TextBlock Text="{Binding X}" TextAlignment="Right" Margin="4,0,0,0"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1">
                <TextBlock x:Name="PART_yLabel" Text="{x:Static rukn:Resources.y}" Foreground="{DynamicResource Text.Disabled}" Margin="0,0,0,0"/>
                <TextBlock Text="{Binding Y}" TextAlignment="Right" Margin="4,0,0,0"/>
            </StackPanel>
            <Button x:Name="PART_ResetPositionButton"
                    Content="{StaticResource zi_reload}"
                    Command="{Binding ResetPosition}"
                    ToolTip="{x:Static rukn:Resources.ResetPosition}"
                    VerticalAlignment="Bottom"
                    Margin="4,0,0,0"
                    Grid.Column="4"
                    Grid.Row="1">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource Text.Secondary}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="5">
                                        <Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e5e5e5"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</UserControl>
