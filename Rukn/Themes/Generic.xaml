<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Rukn"
                    xmlns:controls="clr-namespace:Rukn.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Rukn;component/Icons/Zondicons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="controls:MoveThumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MoveThumb">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:ResizeThumb">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ResizeThumb">
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ResizeThumbSquareStyle" TargetType="controls:ResizeThumb">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="Width" Value="5"/>
        <Setter Property="Height" Value="5"/>
    </Style>
    <Style TargetType="controls:DragResizeItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:DragResizeItem">
                    <Grid FlowDirection="LeftToRight">
                        <controls:MoveThumb DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Cursor="SizeAll"/>
                        <controls:NiceCornersControl x:Name="ResizeDecorator"
                                                     DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                     Visibility="Collapsed"
                                                     Stroke="Blue"
                                                     SpaceStroke="White"
                                                     StrokeThickness="1"
                                                     StrokeDashLine="5"
                                                     StrokeDashSpace="5"
                                                     Focusable="False"
                                                     Margin="-1">
                            <Grid>
                                <Grid Margin="-1" x:Name="SizeEdgeVertical">
                                    <controls:ResizeThumb Height="3" Cursor="SizeNS" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                                    <controls:ResizeThumb Height="3" Cursor="SizeNS" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"/>
                                </Grid>
                                <Grid Margin="-1" x:Name="SizeEdgeHorizontal">
                                    <controls:ResizeThumb Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                                    <controls:ResizeThumb Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                                </Grid>
                                <Grid Margin="-2" x:Name="SizeVertical" Visibility="Collapsed">
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeNS" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeNS" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                                </Grid>
                                <Grid Margin="-2" x:Name="SizeHorizontal" Visibility="Collapsed">
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeWE" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeWE" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                                <Grid Margin="-2" x:Name="SizeCorners" Visibility="Collapsed">
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeNWSE" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeNESW" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeNWSE" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                                    <controls:ResizeThumb Style="{StaticResource ResizeThumbSquareStyle}" Cursor="SizeNESW" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                                </Grid>
                            </Grid>
                        </controls:NiceCornersControl>
                        <ContentPresenter FlowDirection="{TemplateBinding FlowDirection}" IsHitTestVisible="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="Both">
                            <Setter TargetName="SizeCorners" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Vertical">
                            <Setter TargetName="SizeVertical" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SizeEdgeHorizontal" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Horizontal">
                            <Setter TargetName="SizeHorizontal" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SizeEdgeVertical" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ResizeDecorator" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ResizeDecorator" Property="Opacity" Value=".4"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="10000000"/>
                            <Setter TargetName="ResizeDecorator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Text.Secondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="5">
                        <Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e5e5e5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="controls:TextInfoView">
        <Setter Property="Background" Value="{DynamicResource Control.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="230"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TextInfoView">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="5">
                        <Grid DataContext="{TemplateBinding InfoSource}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MinWidth="32" MaxWidth="32"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ContentPresenter x:Name="presenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="rect"
                                       Width="24"
                                       Height="24"
                                       RadiusX="5"
                                       RadiusY="5"
                                       Fill="White"
                                       Stroke="{DynamicResource Control.BorderBrush}"
                                       StrokeThickness="1"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Grid.Column="1"/>
                            <Path x:Name="checkmark"
                                  Data="{StaticResource zi_checkmark-outline}"
                                  Fill="{DynamicResource Brush.Accent}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Grid.Column="1"
                                  Visibility="Collapsed"
                                  FlowDirection="LeftToRight"/>
                            <Grid x:Name="grid" Margin="0,8,0,0" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Path Data="{StaticResource zi_text-box}" Fill="{DynamicResource Brush.Accent.Light}" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,16,0"/>
                                <TextBlock Text="{Binding Width}" HorizontalAlignment="Center" Grid.Column="1"/>
                                <Path Data="M0,0 L8,8z M0,8 L8,0z" Width="8" Height="8" Stroke="{DynamicResource Text.Disabled}" StrokeThickness="1" Margin="4,0" Grid.Column="2"/>
                                <TextBlock Text="{Binding Height}" HorizontalAlignment="Center" Grid.Column="3"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1">
                                    <TextBlock x:Name="PART_xLabel" Foreground="{DynamicResource Text.Disabled}"/>
                                    <TextBlock Text="{Binding X}" TextAlignment="Right" Margin="4,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1">
                                    <TextBlock x:Name="PART_yLabel" Foreground="{DynamicResource Text.Disabled}" Margin="0,0,0,0"/>
                                    <TextBlock Text="{Binding Y}" TextAlignment="Right" Margin="4,0,0,0"/>
                                </StackPanel>
                                <Button x:Name="PART_ResetPositionButton"
                                        Content="{StaticResource zi_reload}"
                                        Command="{Binding ResetPosition}"
                                        Style="{StaticResource IconButtonStyle}"
                                        VerticalAlignment="Bottom"
                                        Margin="4,0,0,0"
                                        Grid.Column="4"
                                        Grid.Row="1"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="grid" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkmark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="rect" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource Brush.Accent}"/>
                            <Setter TargetName="presenter" Property="TextBlock.FontWeight" Value="DemiBold"/>
                        </Trigger>
                        <Trigger Property="IsReference" Value="True">
                            <Setter TargetName="checkmark" Property="Fill" Value="{DynamicResource Brush.Accent.Light}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsReference" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsReference}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=InfoSource.Reference.Mode}" Value="Isolated"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsChecked" Value="True"/>
            </MultiDataTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Padding" Value="7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>